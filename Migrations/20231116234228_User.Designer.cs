// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWallet.Data;

#nullable disable

namespace MyWallet.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231116234228_User")]
    partial class User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWallet.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyWallet.Models.Wallet", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("MyWallet.Models.WalletRecord", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sum")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("walletid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.HasIndex("walletid");

                    b.ToTable("WalletRecords");
                });

            modelBuilder.Entity("MyWallet.Models.Wallet", b =>
                {
                    b.HasOne("MyWallet.Models.User", "user")
                        .WithMany("wallets")
                        .HasForeignKey("userid");

                    b.Navigation("user");
                });

            modelBuilder.Entity("MyWallet.Models.WalletRecord", b =>
                {
                    b.HasOne("MyWallet.Models.User", "user")
                        .WithMany("walletRecords")
                        .HasForeignKey("userid");

                    b.HasOne("MyWallet.Models.Wallet", "wallet")
                        .WithMany("walletRecords")
                        .HasForeignKey("walletid");

                    b.Navigation("user");

                    b.Navigation("wallet");
                });

            modelBuilder.Entity("MyWallet.Models.User", b =>
                {
                    b.Navigation("walletRecords");

                    b.Navigation("wallets");
                });

            modelBuilder.Entity("MyWallet.Models.Wallet", b =>
                {
                    b.Navigation("walletRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
